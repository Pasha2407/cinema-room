{"version":3,"file":"static/js/884.084c84f7.chunk.js","mappings":"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","sources":["webpack://pro-movie-searcher/./src/components/Details/Details.module.css?cd8c","components/VideoPlayer/VideoPlayer.jsx","service/URLMovies.js","components/Details/Details.jsx","components/Loader/Loader.jsx","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"Details_Wrapper__e-9-H\",\"Container\":\"Details_Container__7ghBp\",\"Title\":\"Details_Title__XQ26Q\",\"BackgP\":\"Details_BackgP__NwkAT\",\"Companies\":\"Details_Companies__2sy1u\",\"LinkButton\":\"Details_LinkButton__MkJtV\",\"Background\":\"Details_Background__xWout\",\"BackgroundFilter\":\"Details_BackgroundFilter__3s00+\"};","import { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { URLMovies } from 'service/URLMovies';\n\nexport const VideoPlayer = ({ id }) => {\n  const [quality, setQuality] = useState('720');\n\n  const videoUrl = URLMovies(id, quality);\n  const [play, setPlay] = useState(false);\n\n  const handlePlay = quality => {\n    setPlay(true);\n    setQuality(quality);\n  };\n\n  return (\n    <div>\n      <section>\n        <p>Ukrainian dubbing</p>\n        <button onClick={() => handlePlay('480')}>play sd 480</button>\n        <button onClick={() => handlePlay('720')}>play hd 720</button>\n        <button onClick={() => handlePlay('1080')}>play fullhd 1080</button>\n      </section>\n\n      {play && <ReactPlayer url={videoUrl} controls width={640} height={360} />}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport const URLMovies = (id, quality) => {\n  const [videoUrls, setVideoUrls] = useState('');\n  const end = '/index.m3u8';\n\n  useEffect(() => {\n    switch (id) {\n      case '414906':\n        setVideoUrls(`https://s1.ashdi.vip/content/stream/films/the.batman.2022.bdremux.by.hurtom_62197/hls/${quality}${end}`);\n        break;\n      case '872585':\n        setVideoUrls(`https://s4.ashdi.vip/content/stream/films/oppenheimer_2023_bdrip_1080p_h.265_imax_ukr_eng_hurtom_109925/hls/${quality}${end}`);\n        break;\n      case '286217':\n        setVideoUrls(`https://s1.ashdi.vip/content/stream/films/marsanin_297/hls/${quality}${end}`);\n        break;\n      case '299534':\n        setVideoUrls(`https://s1.ashdi.vip/content/stream/films/mesniki_fnal_314/hls/${quality}${end}`);\n        break;\n      case '51497':\n        setVideoUrls(`https://s1.ashdi.vip/content/stream/films/forsazh_5_1449/hls/${quality}${end}`);\n        break;\n      default:\n        setVideoUrls('');\n    }\n  }, [id, quality]);\n  return videoUrls;\n};\n","import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\n\nimport css from './Details.module.css';\nimport { VideoPlayer } from 'components/VideoPlayer/VideoPlayer';\n\nexport const Details = ({ data, back, id, availableId }) => {\n  const budget =\n    data.budget && data.budget.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  const revenue =\n    data.revenue &&\n    data.revenue.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\n  const hour = data.runtime && Math.floor(data.runtime / 60);\n  let hourString;\n  if (hour === 1) hourString = 'година';\n  else hourString = 'години';\n  const minute = data.runtime && data.runtime % 60;\n\n  return (\n    <div\n      className={css.Background}\n      style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/w500${data.backdrop_path})`,\n      }}\n    >\n      <div className={css.BackgroundFilter}>\n        <div className={css.Wrapper}>\n          <Link to={back.current}>\n            <IconContext.Provider value={{ color: '#be4040', size: 30 }}>\n              <IoMdArrowRoundBack />\n            </IconContext.Provider>\n            Назад\n          </Link>\n          <div className={css.Container}>\n            <aside\n              style={{\n                backgroundImage: data.poster_path\n                  ? `url(https://image.tmdb.org/t/p/w500${data.poster_path})`\n                  : `url(${require(`data/images/noimage.jpg`)})`,\n              }}\n            ></aside>\n            <div className={css.Title}>\n              {data.title && <h1>{data.title}</h1>}\n              {data.name && <h1>{data.name}</h1>}\n\n              {data.vote_average && (\n                <h3>\n                  <span>Оцінка корисутвачів: </span>\n                  {Math.round(data.vote_average * 10)}%\n                </h3>\n              )}\n\n              {data.release_date && (\n                <h3>\n                  <span>Рік: </span>\n                  {data.release_date.slice(0, 4)}\n                </h3>\n              )}\n              {data.first_air_date && data.last_air_date && (\n                <h3>\n                  <span>Рік: </span>\n                  {data.first_air_date.slice(0, 4)} —{' '}\n                  {data.last_air_date.slice(0, 4)}\n                </h3>\n              )}\n\n              <h4>\n                <span>Жанр</span>\n              </h4>\n              {data.genres.length > 0 ? (\n                <section className={css.BackgP}>\n                  {data.genres?.map(item => (\n                    <span key={item.id}>{item.name}</span>\n                  ))}\n                </section>\n              ) : (\n                <i>Жанр невідомий</i>\n              )}\n\n              <h4>\n                <span>Країна</span>\n              </h4>\n              {data.production_countries.length > 0 ? (\n                <section className={css.BackgP}>\n                  {data.production_countries?.map(item => (\n                    <span key={item.id}>{item.name}</span>\n                  ))}\n                </section>\n              ) : (\n                <i>Країна невідома</i>\n              )}\n\n              {data.budget && (\n                <h3>\n                  <span>Бюджет: </span>\n                  {budget} $\n                </h3>\n              )}\n\n              {data.revenue && (\n                <h3>\n                  <span>Дохід: </span>\n                  {revenue} $\n                </h3>\n              )}\n\n              {data.tagline && (\n                <h3>\n                  <span>Слоган: </span>\n                  {data.tagline}\n                </h3>\n              )}\n\n              {data.runtime && (\n                <h3>\n                  <span>Тривалість: </span>\n                  {hour} {hourString} {minute} хв\n                </h3>\n              )}\n\n              {data.number_of_seasons && (\n                <h3>\n                  <span>Кількість сезонів: </span>\n                  {data.number_of_seasons}\n                </h3>\n              )}\n\n              {data.number_of_episodes && (\n                <h3>\n                  <span>Кількість серій: </span>\n                  {data.number_of_episodes}\n                </h3>\n              )}\n            </div>\n          </div>\n          <h3>Компанія</h3>\n          {data.production_companies.length > 0 && (\n            <section className={css.Companies}>\n              {data.production_companies?.map(item => (\n                <article key={item.id}>\n                  {item.logo_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${item.logo_path}`}\n                      alt=\"\"\n                    ></img>\n                  ) : (\n                    <div>\n                      <p>{item.name}</p>\n                    </div>\n                  )}\n                </article>\n              ))}\n            </section>\n          )}\n          {data.production_companies.length === 0 && <i>No companies found</i>}\n          <h3>Опис</h3>\n          {data.overview.length > 0 ? (\n            <p> {data.overview}</p>\n          ) : (\n            <i>No overview found</i>\n          )}\n          {availableId.toString().includes(id) ? (\n            <VideoPlayer id={id} />\n          ) : (\n            <i>Фільму не має</i>\n          )}\n          <div className={css.LinkButton}>\n            <h3>Additional information</h3>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"reviews\">Reviews</Link>\n          </div>\n          <Suspense\n            fallback={\n              <p style={{ paddingLeft: 30 }}>\n                <i>Loading...</i>\n              </p>\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#be4040\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'service/TmdbAPI';\n\nimport { Details } from 'components/Details/Details';\nimport availableMovies from 'data/availableMovies.json';\n\nconst MovieDetails = ({ language }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  const { id } = useParams();\n  const location = useLocation();\n  const back = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(id, language);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 700);\n      }\n    };\n    movieDetails();\n  }, [id, language]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <Details\n      data={movieDetails}\n      back={back}\n      id={id}\n      availableId={availableMovies}\n    />\n  );\n};\n\nexport default MovieDetails;\n"],"names":["VideoPlayer","_ref","id","_useState","useState","_useState2","_slicedToArray","quality","setQuality","videoUrl","videoUrls","setVideoUrls","end","useEffect","concat","URLMovies","_useState3","_useState4","play","setPlay","handlePlay","_jsxs","children","_jsx","onClick","ReactPlayer","url","controls","width","height","Details","_data$genres","_data$production_coun","_data$production_comp","hourString","data","back","availableId","budget","toString","replace","revenue","hour","runtime","Math","floor","minute","className","css","style","backgroundImage","backdrop_path","Link","to","current","IconContext","value","color","size","IoMdArrowRoundBack","poster_path","require","title","name","vote_average","round","release_date","slice","first_air_date","last_air_date","genres","length","map","item","production_countries","tagline","number_of_seasons","number_of_episodes","production_companies","logo_path","src","alt","overview","includes","Suspense","fallback","paddingLeft","Outlet","Loader","display","justifyContent","ThreeDots","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","_location$state","language","isLoading","setIsLoading","movieDetails","setMovieDetails","useParams","location","useLocation","useRef","state","from","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","availableMovies"],"sourceRoot":""}