{"version":3,"file":"static/js/573.f9888c7c.chunk.js","mappings":"8NA2BA,UAtBqB,WACnB,IAAAA,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,IAAkBZ,GAAI,KAAD,EAAtCQ,EAAQC,EAAAI,KACdlB,EAAWa,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBM,QAAQC,MAAKP,EAAAK,IAAQ,QAEN,OAFML,EAAAC,KAAA,GAErBX,GAAS,GAAMU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAElB,kBATiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUlBjB,GACF,GAAG,CAACH,KAEGqB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAAC5B,QAASA,EAASI,MAAOA,GAC3C,C,uDCxBA,MAA4B,2BAA5B,EAAqE,6B,SCCxDwB,EAAU,SAAHlB,GAA4B,IAAtBV,EAAOU,EAAPV,QAASI,EAAKM,EAALN,MACjC,OACEyB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC5BL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,4DACHhC,EAAQiC,OAAS,IAChBN,EAAAA,EAAAA,KAAA,OAAAK,SACGhC,EAAQkC,KAAI,SAAAC,GAAI,OACfN,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEL,EAAAA,EAAAA,KAAA,KAAAK,SAAIG,EAAKC,UACTT,EAAAA,EAAAA,KAAA,KAAGG,UAAWC,EAAgBC,SAAEG,EAAKE,YAF7BF,EAAK7B,GAGT,MAIXF,GAA4B,IAAnBJ,EAAQiC,SAAgBN,EAAAA,EAAAA,KAAA,KAAAK,SAAG,uBAG3C,C","sources":["components/Reviews/MovieReviews.jsx","webpack://pro-movie-searcher/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'service/TmdbAPI';\nimport { Reviews } from './Reviews';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [found, setFound] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(id);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setFound(true);\n      }\n    };\n    movieReviews();\n  }, [id]);\n\n  return <Reviews reviews={reviews} found={found} />;\n};\n\nexport default MovieReviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Reviews_Container__jQEDF\",\"Description\":\"Reviews_Description__B4byv\"};","import css from './Reviews.module.css';\n\nexport const Reviews = ({ reviews, found }) => {\n  return (\n    <div className={css.Container}>\n      <h2>Ð’Ñ–Ð´Ð³ÑƒÐºÐ¸ ðŸ‘‡</h2>\n      {reviews.length > 0 && (\n        <div>\n          {reviews.map(item => (\n            <div key={item.id}>\n              <b>{item.author}</b>\n              <p className={css.Description}>{item.content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n      {found && reviews.length === 0 && <i>No reviews found</i>}\n    </div>\n  );\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","found","setFound","id","useParams","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","t0","console","error","finish","stop","apply","arguments","_jsx","Reviews","_jsxs","className","css","children","length","map","item","author","content"],"sourceRoot":""}