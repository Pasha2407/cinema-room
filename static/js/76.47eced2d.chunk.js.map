{"version":3,"file":"static/js/76.47eced2d.chunk.js","mappings":"0OACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAsF,oB,SCkDtF,EA9Ca,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAeZ,GAAI,KAAD,EAAnCQ,EAAQC,EAAAI,KACdlB,EAAQa,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQC,MAAKP,EAAAK,IAAQ,QAEN,OAFML,EAAAC,KAAA,GAErBX,GAAS,GAAMU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAElB,kBATc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUfjB,GACF,GAAG,CAACH,KAGFqB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUH,SAAC,4BACzB5B,EAAKgC,OAAS,IACbH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASH,SACrB5B,EAAKiC,KAAI,SAAAC,GAAI,OACZP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEM,IACED,EAAKE,aAAY,kCAAAC,OACqBH,EAAKE,cACvCE,EAAQ,KAEdC,IAAI,MAENV,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcH,UAC5BC,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAKM,oBAVJN,EAAK5B,GAYT,MAIVF,GAAyB,IAAhBJ,EAAKgC,SAAgBH,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAGxC,C","sources":["webpack://pro-movie-searcher/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"Cast_List__AZLS7\",\"ActorName\":\"Cast_ActorName__93D+n\",\"Title\":\"Cast_Title__Pry6c\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'service/api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [found, setFound] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(id);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setFound(true);\n      }\n    };\n    movieCast();\n  }, [id]);\n\n  return (\n    <div>\n      <h2 className={css.Title}>Movie Cast ðŸ‘‡</h2>\n      {cast.length > 0 && (\n        <ul className={css.List}>\n          {cast.map(item => (\n            <li key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w300${item.profile_path}`\n                    : require('../../images/noimage2.jpg')\n                }\n                alt=\"\"\n              ></img>\n              <div className={css.ActorName}>\n                <p>{item.original_name}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {found && cast.length === 0 && <i>No cast found</i>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","found","setFound","id","useParams","useEffect","movieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieCast","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","children","_jsx","className","css","length","map","item","src","profile_path","concat","require","alt","original_name"],"sourceRoot":""}