{"version":3,"file":"static/js/140.4aaf0e83.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://pro-movie-searcher/./src/pages/Search/Search.module.css?89fb","pages/Search/Search.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#be4040\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"Search_Wrapper__pmiyz\",\"Container\":\"Search_Container__VCT3y\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies, searchSerials } from 'service/TmdbAPI';\nimport { List } from 'components/List/List';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Search.module.css';\nimport { BsSearch } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\n\nconst Search = ({ language, path }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [foundSerials, setFoundSerials] = useState([]);\n  const [isLoading, setIsLoading] = useState();\n  const [found, setFound] = useState(false);\n  const movieName = searchParams.get('query') || '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const query = form.elements.search.value.toLowerCase();\n    if (query.trim() === '') return alert('Can not be empty');\n    setSearchParams({ query });\n    event.target.reset();\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await searchMovies(movieName, language);\n        setFoundMovies(movies);\n        const serials = await searchSerials(movieName, language);\n        setFoundSerials(serials);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 700);\n        setTimeout(() => {\n          setFound(true);\n        }, 2000);\n      }\n    };\n    search();\n  }, [movieName, language]);\n\n  return (\n    <div className={css.Wrapper}>\n      <div className={css.Container}>\n        <h2>Movie Search</h2>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"type here\" name=\"search\" />\n          <button type=\"submit\">\n            <IconContext.Provider value={{ size: 20 }}>\n              <BsSearch />\n            </IconContext.Provider>\n          </button>\n        </form>\n        <h2>Serial Search</h2>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"type here\" name=\"search\" />\n          <button type=\"submit\">\n            <IconContext.Provider value={{ size: 20 }}>\n              <BsSearch />\n            </IconContext.Provider>\n          </button>\n        </form>\n      </div>\n      {isLoading && movieName ? (\n        <Loader />\n      ) : (\n        <>\n          <List data={foundMovies} path=\"movies\" />\n          <List data={foundSerials} path=\"serials\" />\n        </>\n      )}\n      {found && !isLoading && foundMovies.length === 0 && movieName && (\n        <h2>No movie found for the request \"{movieName}\"</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":["Loader","_jsx","style","display","justifyContent","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","_ref","language","_useSearchParams","path","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","foundMovies","setFoundMovies","_useState3","_useState4","foundSerials","setFoundSerials","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","found","setFound","movieName","get","handleSubmit","event","preventDefault","query","currentTarget","elements","search","value","toLowerCase","trim","alert","target","reset","useEffect","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","movies","serials","_context","prev","next","searchMovies","sent","searchSerials","t0","console","error","setTimeout","finish","stop","apply","arguments","_jsxs","className","css","onSubmit","type","placeholder","name","IconContext","size","BsSearch","_Fragment","List","data","length"],"sourceRoot":""}